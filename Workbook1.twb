<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <_.fcp.SingleValuePerNestSorting.true...SingleValuePerNestSorting />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (Data - Final Output)' inline='true' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data - Final Output' name='excel-direct.1axq3vt1s13p6n184j48s1mkl65a'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Joshkinz/Desktop/Projects/Sleeping-Alone-Survey-Analysis/Data - Final Output.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1axq3vt1s13p6n184j48s1mkl65a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Gender - Response' ordinal='1' />
            <column datatype='string' name='Age - Response' ordinal='2' />
            <column datatype='string' name='Household Income - Response' ordinal='3' />
            <column datatype='string' name='Education - Response' ordinal='4' />
            <column datatype='string' name='Location (Census Region) - Response' ordinal='5' />
            <column datatype='string' name='Question+Subquestion' ordinal='6' />
            <column datatype='string' name='Answer' ordinal='7' />
            <column datatype='string' name='Question' ordinal='8' />
            <column datatype='integer' name='Respondents' ordinal='9' />
            <column datatype='integer' name='Same Answer' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1axq3vt1s13p6n184j48s1mkl65a' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='6'>
            <column datatype='integer' name='ID' ordinal='0' />
            <column datatype='string' name='Gender - Response' ordinal='1' />
            <column datatype='string' name='Age - Response' ordinal='2' />
            <column datatype='string' name='Household Income - Response' ordinal='3' />
            <column datatype='string' name='Education - Response' ordinal='4' />
            <column datatype='string' name='Location (Census Region) - Response' ordinal='5' />
            <column datatype='string' name='Question+Subquestion' ordinal='6' />
            <column datatype='string' name='Answer' ordinal='7' />
            <column datatype='string' name='Question' ordinal='8' />
            <column datatype='integer' name='Respondents' ordinal='9' />
            <column datatype='integer' name='Same Answer' ordinal='10' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K10001:no:A1:K10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Gender - Response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Gender - Response]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Gender - Response</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Age - Response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Age - Response]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Age - Response</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Household Income - Response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Household Income - Response]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Household Income - Response</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Education - Response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Education - Response]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Education - Response</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location (Census Region) - Response</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location (Census Region) - Response]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Location (Census Region) - Response</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question+Subquestion</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Question+Subquestion]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Question+Subquestion</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Answer</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Answer]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Answer</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Question</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Question]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Question</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Respondents</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Respondents]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Respondents</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Same Answer</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Same Answer]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Same Answer</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
      <column caption='Gender' datatype='string' name='[Gender - Response]' role='dimension' type='nominal' />
      <column datatype='integer' name='[ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Question]' role='dimension' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Same Answer (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='1' formula='[Same Answer]' peg='0' size='61.8' />
      </column>
      <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415]' role='measure' type='quantitative' />
      <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
      <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Answer,Question)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Answer:nk]' />
          <groupfilter function='level-members' level='[none:Question:nk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Answer:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Aviation customer service&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cosemtologist&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;fire service&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;guest room when visiting out of town&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Installation, Maintenance, and Repair Occupations&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;non profit&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Public Health&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;retired/volunteer&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Translator and editor&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;We alternate, one in main bed, one on couch&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A few times per month&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;After 20 years of our relationship&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Carpentry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Divorced&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Education Non-Profit/National Service - teaching&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;homemake and homeschool teacher&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Management &amp; Community Development Consultant&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;partner is out of town, hospital etc&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Planning&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Retired from medical device clinical trials but do consulting&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;stay at home mother&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;16-20 years&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Airlines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Back room used as an office&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Compliance and Training Specialist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Environmental Consulting&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Housekeeping supervisor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Metropolitan Planning&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Once a month or less&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Product development&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Retired1&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shared bedroom, but one of us sleeps on the floor&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Single, but cohabiting with a significant other&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Strongly disagree&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Within 16-20 years of our relationship&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;11-15 years&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Never&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Separated&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Within 11-15 years of our relationship&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Biotechnology&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dietary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;global health, management consulting&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;I sleep on the living room floor&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JjANITORIAL&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Occupational Health and Safety&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Research&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Securities compliance&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Unemployed/retired; Grassroots activist&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Avocational job-shop (machinist)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Currently a stay-at-home mother&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Flight Instructor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;I live at home&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;interior design&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Non-profit Management&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;One of us snores&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Public safety&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;sAFETY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Transportation and Materials Moving Occupations&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;we don&apos;t  have  differnt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;All of the above: Homemaker&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Computer and Mathematical Occupations&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Couch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Farming, Fishing, and Forestry Occupations&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;military&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Not enough space&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Production Occupations&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Retired, Law Enforcement&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shared bedroom, different bed&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;telecomunication&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Somewhat agree&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Caregiver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Domestic specialist&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Healthcare Practitioners and Technical Occupations&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Locksmith&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Out of town&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pet Care&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;retired educator&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;state employment&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wood product industry- manufacturing&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A/V Consultant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Child care&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Education, Training, and Library Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Homemaker&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Management Occupations&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;police&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;porch in the wind&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Retired from substance abuse counseling.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Stay at home parent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Business and Financial Operations Occupations&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DISBLED&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Government, public sector, Dept. of Motor Vehicles clerk&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;librarian&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Livingroom floor or couch&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;More than 20 years&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pastoral Care and Relgiouls Studies&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;retired&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Social science researcher&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Volunteer with animal welfare nonprofits&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Architecture and Engineering Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Construction and Extraction Occupations&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Financial advisor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Floor&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;i&apos;m disabled&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mom and housewife&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;One of us is sick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Property Management; Desk Clerk&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Retired!&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;spare room in the basement&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;TEXTILES&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;boatbuilder repair&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;disabled&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;goverment&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;In the bed in our child&apos;s room to assist when child is fussy.&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Laid off from Computer and Mathematical Occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Office and Administrative Support Occupations&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;research regulation&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Semi-retired&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Utilities&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;both retired&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;disabled student&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Government&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;kids bed&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;law enforcement&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;outdoor power equipment sales and service&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;ret.&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Semi-retired Job-Shop&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;veterinary&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;campground owner and small business owner&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;dog groomer&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;graduate student&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Life, Physical, and Social Science Occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;On the couch/chair&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Personal Care and Service Occupations&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Retired Christian Pastor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Speculator&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;We are both retired&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;caregiver for disabled husband and child&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;education&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Healthcare Support Occupations&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;maintenance&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Out of town location&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Physical Service / Trade - Dog Grooming&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;retired engineer&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;stay at home mom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Writing and editing, self-employed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;6-10 years&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;bartender&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Customer Service&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Every night&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Food Preparation and Serving Related Occupations&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I sleep in our shared bed, my partner is the one who sleeps somewhere else&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Investment management&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Married&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;nonprofit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;real estate appraisal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Safety and Occupational Health&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unemployed&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;With the baby in her room&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Within 6-10 years of our relationship&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Less than 1 year&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;My partner sleeps in our shared bed, I&apos;m the one who sleeps somewhere else&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Once a year or less&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Widowed&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Within the first 1-5 years of our relationship&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Arts, Design, Entertainment, Sports, and Media Occupations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;consulting&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;fire department&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guest house&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Information Technology&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mother&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Protective Service Occupations&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Retired. do babysit for my grandchild but not for money.&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;This does not occur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Transcription&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1-5 years&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;A few times per week&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Administrative Assistant&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;always sleep in same bed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Commercial real estate&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Energy (Natural Gas Storage)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;horticulture&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Immediately/ We&apos;ve always slept in separate beds&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;In a domestic partnership or civil union&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MANUFACTURING&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;police officer&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Retired Management&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;same bed&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Student&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Building and Grounds Cleaning and Maintenance Occupations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;disabled,  unemployed&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;government grant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;kids room&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Legal Occupations&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pastor, ministry related occupation&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;retire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Small business owner&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Volunteer for animal welfare nonprofits&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;bio-medical technician&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Data Entry for a Marketing Company&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gas attendant.&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I sleep on the floor in a different room&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;IT Consultant&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;not employed&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Other (please specify)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Religious Education&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sales and Related Occupations&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;unemployed and looking for work&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;with the kids&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Agricultural business&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;At my own home&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Community and Social Service Occupations&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Environmental consultants&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Housekeeper&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Medical Research&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Product Design Consultant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Retired Military&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Separate bedroom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Technology Consultant&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6E26FCBFE4E34FCEAE9686AC2464C415'>
            <properties context=''>
              <relation connection='excel-direct.1axq3vt1s13p6n184j48s1mkl65a' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:K10001:no:A1:K10001:0' header='yes' outcome='6'>
                  <column datatype='integer' name='ID' ordinal='0' />
                  <column datatype='string' name='Gender - Response' ordinal='1' />
                  <column datatype='string' name='Age - Response' ordinal='2' />
                  <column datatype='string' name='Household Income - Response' ordinal='3' />
                  <column datatype='string' name='Education - Response' ordinal='4' />
                  <column datatype='string' name='Location (Census Region) - Response' ordinal='5' />
                  <column datatype='string' name='Question+Subquestion' ordinal='6' />
                  <column datatype='string' name='Answer' ordinal='7' />
                  <column datatype='string' name='Question' ordinal='8' />
                  <column datatype='integer' name='Respondents' ordinal='9' />
                  <column datatype='integer' name='Same Answer' ordinal='10' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Frequency'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How Often Do Couples Sleep Separately?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
              <bucket>&quot;Not enough space&quot;</bucket>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>&quot;One of us is sick&quot;</bucket>
              <bucket>&quot;One of us snores&quot;</bucket>
              <bucket>&quot;Never&quot;</bucket>
              <bucket>&quot;Once a year or less&quot;</bucket>
              <bucket>&quot;Once a month or less&quot;</bucket>
              <bucket>&quot;A few times per month&quot;</bucket>
              <bucket>&quot;A few times per week&quot;</bucket>
              <bucket>&quot;Every night&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;When both you and your partner are at home, how often do you sleep in separate beds?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='122' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{1251F55F-E044-4E12-AFA1-C02A7D9B6284}' />
    </worksheet>
    <worksheet name='Help Stay Together'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Does Sleeping Separately Help Couples Stay Together?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;To what extent do you agree with the following statement: \&quot;sleeping in separate beds helps us to stay together.\&quot;&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='137' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{E3A29543-D6AA-4A83-A8AD-FEA7C4098B10}' />
    </worksheet>
    <worksheet name='How Long'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How Long Until Couples First Slept Separately?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
              <bucket>&quot;Not enough space&quot;</bucket>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>&quot;One of us is sick&quot;</bucket>
              <bucket>&quot;One of us snores&quot;</bucket>
              <bucket>&quot;Never&quot;</bucket>
              <bucket>&quot;Once a year or less&quot;</bucket>
              <bucket>&quot;Once a month or less&quot;</bucket>
              <bucket>&quot;A few times per month&quot;</bucket>
              <bucket>&quot;A few times per week&quot;</bucket>
              <bucket>&quot;Every night&quot;</bucket>
              <bucket>&quot;Immediately/ We&apos;ve always slept in separate beds&quot;</bucket>
              <bucket>&quot;Within the first 1-5 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 6-10 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 11-15 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 16-20 years of our relationship&quot;</bucket>
              <bucket>&quot;After 20 years of our relationship&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;When was the first time you slept in separate beds?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='134' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{EE3D59CD-586B-4E4D-AE35-7E0ABB17C926}' />
    </worksheet>
    <worksheet name='Improve Sex Lives'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Does Sleeping Separately Improve Sex Lives?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;To what extent do you agree with the following statement:ë_\&quot;our sex life has improved as a result of sleeping in separate beds.\&quot;ë_&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{0720D2E2-B2EC-4BE3-9743-4B3F5885B2CD}' />
    </worksheet>
    <worksheet name='Length of Relationship'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Length of Current Relationship</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>%null%</bucket>
              <bucket>&quot;Less than 1 year&quot;</bucket>
              <bucket>&quot;1-5 years&quot;</bucket>
              <bucket>&quot;6-10 years&quot;</bucket>
              <bucket>&quot;11-15 years&quot;</bucket>
              <bucket>&quot;16-20 years&quot;</bucket>
              <bucket>&quot;More than 20 years&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;How long have you been in your current relationship? If you are not currently in a relationship, please answer according to your last relationship.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='118' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{19D1EEAB-50CD-4BEB-846E-E9E6505CEF5B}' />
    </worksheet>
    <worksheet name='Occupations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Respondent Occupations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Answer:nk]' />
                <groupfilter function='level-members' level='[none:Question:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;My partner sleeps in our shared bed, I&apos;m the one who sleeps somewhere else&quot;' />
                <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed, where does your partner typically sleep?&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;always sleep in same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;At her own home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Basement&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Elsewhere away from home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;He has his own house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;his parents house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;hotel&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I AM SLEEPING IN A HOSPITAL BED&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;In the bed in our child&apos;s room to assist when child is fussy&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;master bedroom&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;One of us sleeps in our bed. One sleeps on couch in separate room depending upon which of us is unable to sleep.&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;one or the other may sleep in the chair if we don&apos;t feel good&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Out of town location&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Same as above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;see above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Trailer house in next lot&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;We alternate, one in main bed, one on couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;with kids&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;With the baby in her room&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;Which of the following best describes your current occupation?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='17' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</rows>
        <cols>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</cols>
      </table>
      <simple-id uuid='{F24A1191-E207-4C56-9635-D3B31932B8BF}' />
    </worksheet>
    <worksheet name='Partner Location'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Where Do Partners Sleep?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Answer:nk]' />
                <groupfilter function='level-members' level='[none:Question:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;My partner sleeps in our shared bed, I&apos;m the one who sleeps somewhere else&quot;' />
                <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed, where does your partner typically sleep?&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;always sleep in same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;At her own home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Basement&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Elsewhere away from home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;He has his own house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;his parents house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;hotel&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I AM SLEEPING IN A HOSPITAL BED&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;In the bed in our child&apos;s room to assist when child is fussy&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;master bedroom&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;One of us sleeps in our bed. One sleeps on couch in separate room depending upon which of us is unable to sleep.&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;one or the other may sleep in the chair if we don&apos;t feel good&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Out of town location&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Same as above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;see above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Trailer house in next lot&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;We alternate, one in main bed, one on couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;with kids&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;With the baby in her room&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
              <bucket>&quot;Not enough space&quot;</bucket>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
              <bucket>&quot;One of us is sick&quot;</bucket>
              <bucket>&quot;One of us snores&quot;</bucket>
              <bucket>&quot;Never&quot;</bucket>
              <bucket>&quot;Once a year or less&quot;</bucket>
              <bucket>&quot;Once a month or less&quot;</bucket>
              <bucket>&quot;A few times per month&quot;</bucket>
              <bucket>&quot;A few times per week&quot;</bucket>
              <bucket>&quot;Every night&quot;</bucket>
              <bucket>&quot;Immediately/ We&apos;ve always slept in separate beds&quot;</bucket>
              <bucket>&quot;Within the first 1-5 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 6-10 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 11-15 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 16-20 years of our relationship&quot;</bucket>
              <bucket>&quot;After 20 years of our relationship&quot;</bucket>
              <bucket>&quot;always sleep in same bed&quot;</bucket>
              <bucket>&quot;At my own home&quot;</bucket>
              <bucket>&quot;Back room used as an office&quot;</bucket>
              <bucket>&quot;Couch&quot;</bucket>
              <bucket>&quot;Floor&quot;</bucket>
              <bucket>&quot;Guest house&quot;</bucket>
              <bucket>&quot;guest room when visiting out of town&quot;</bucket>
              <bucket>&quot;I live at home&quot;</bucket>
              <bucket>&quot;I sleep on the floor in a different room&quot;</bucket>
              <bucket>&quot;I sleep on the living room floor&quot;</bucket>
              <bucket>&quot;In the bed in our child&apos;s room to assist when child is fussy.&quot;</bucket>
              <bucket>&quot;kids bed&quot;</bucket>
              <bucket>&quot;Livingroom floor or couch&quot;</bucket>
              <bucket>&quot;Out of town&quot;</bucket>
              <bucket>&quot;Out of town location&quot;</bucket>
              <bucket>&quot;partner is out of town, hospital etc&quot;</bucket>
              <bucket>&quot;porch in the wind&quot;</bucket>
              <bucket>&quot;same bed&quot;</bucket>
              <bucket>&quot;spare room in the basement&quot;</bucket>
              <bucket>&quot;This does not occur&quot;</bucket>
              <bucket>&quot;We alternate, one in main bed, one on couch&quot;</bucket>
              <bucket>&quot;we don&apos;t  have  differnt&quot;</bucket>
              <bucket>&quot;With the baby in her room&quot;</bucket>
              <bucket>&quot;with the kids&quot;</bucket>
              <bucket>&quot;kids room&quot;</bucket>
              <bucket>&quot;I sleep in our shared bed, my partner is the one who sleeps somewhere else&quot;</bucket>
              <bucket>&quot;At her own home&quot;</bucket>
              <bucket>&quot;Basement&quot;</bucket>
              <bucket>&quot;Elsewhere away from home&quot;</bucket>
              <bucket>&quot;He has his own house&quot;</bucket>
              <bucket>&quot;his parents house&quot;</bucket>
              <bucket>&quot;hotel&quot;</bucket>
              <bucket>&quot;I AM SLEEPING IN A HOSPITAL BED&quot;</bucket>
              <bucket>&quot;In the bed in our child&apos;s room to assist when child is fussy&quot;</bucket>
              <bucket>&quot;master bedroom&quot;</bucket>
              <bucket>&quot;One of us sleeps in our bed. One sleeps on couch in separate room depending upon which of us is unable to sleep.&quot;</bucket>
              <bucket>&quot;one or the other may sleep in the chair if we don&apos;t feel good&quot;</bucket>
              <bucket>&quot;Same as above&quot;</bucket>
              <bucket>&quot;see above&quot;</bucket>
              <bucket>&quot;Trailer house in next lot&quot;</bucket>
              <bucket>&quot;with kids&quot;</bucket>
              <bucket>&quot;Shared bedroom, but one of us sleeps on the floor&quot;</bucket>
              <bucket>&quot;Shared bedroom, different bed&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>&quot;On the couch/chair&quot;</bucket>
              <bucket>&quot;Separate bedroom&quot;</bucket>
              <bucket>&quot;My partner sleeps in our shared bed, I&apos;m the one who sleeps somewhere else&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed, where does your partner typically sleep?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='154' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{E873052D-075C-4887-BCEC-8977A5BD5B89}' />
    </worksheet>
    <worksheet name='Reasons'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Reasons to Sleep Separately</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;One of us snores&quot;</bucket>
              <bucket>&quot;One of us is sick&quot;</bucket>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
              <bucket>&quot;Not enough space&quot;</bucket>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;What are the reasons that you sleep in separate beds? Please select all that apply.&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
            <single-value-per-nest-shelf-sort dimension-to-sort='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]' direction='ASC' measure-to-sort-by='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]' shelf='rows' />
          </_.fcp.SingleValuePerNestSorting.true...single-value-per-nest-shelf-sorts>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='45' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]' value='64' />
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='248' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</rows>
        <cols>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</cols>
      </table>
      <simple-id uuid='{CD4FFCBA-C1C3-4360-835F-DC6821E91BF9}' />
    </worksheet>
    <worksheet name='Relationship'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Respondent Relationship Status</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Answer:nk]' />
                <groupfilter function='level-members' level='[none:Question:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;My partner sleeps in our shared bed, I&apos;m the one who sleeps somewhere else&quot;' />
                <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed, where does your partner typically sleep?&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;always sleep in same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;At her own home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Basement&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Elsewhere away from home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;He has his own house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;his parents house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;hotel&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I AM SLEEPING IN A HOSPITAL BED&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;In the bed in our child&apos;s room to assist when child is fussy&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;master bedroom&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;One of us sleeps in our bed. One sleeps on couch in separate room depending upon which of us is unable to sleep.&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;one or the other may sleep in the chair if we don&apos;t feel good&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Out of town location&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Same as above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;see above&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Trailer house in next lot&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;We alternate, one in main bed, one on couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;with kids&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;With the baby in her room&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Divorced&quot;</bucket>
              <bucket>&quot;Separated&quot;</bucket>
              <bucket>&quot;Widowed&quot;</bucket>
              <bucket>&quot;Single, but cohabiting with a significant other&quot;</bucket>
              <bucket>&quot;In a domestic partnership or civil union&quot;</bucket>
              <bucket>&quot;Married&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;Which of the following best describes your current relationship status?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='125' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{00E8EF90-187F-431B-8EAD-8BFCCFA25D7F}' />
    </worksheet>
    <worksheet name='Respondent Location'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Where Do Respondents Sleep?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Answer:nk]' />
                <groupfilter function='level-members' level='[none:Question:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I sleep in our shared bed, my partner is the one who sleeps somewhere else&quot;' />
                <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed as your partner, where do you typically sleep?&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;always sleep in same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;At my own home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Back room used as an office&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Floor&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Guest house&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;guest room when visiting out of town&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I live at home&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I sleep on the floor in a different room&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;I sleep on the living room floor&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;In the bed in our child&apos;s room to assist when child is fussy.&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;kids bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;kids room&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Livingroom floor or couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Never&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Out of town&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;Out of town location&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;partner is out of town, hospital etc&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;porch in the wind&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;same bed&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;spare room in the basement&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;This does not occur&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;We alternate, one in main bed, one on couch&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;we don&apos;t  have  differnt&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;With the baby in her room&quot;' />
                <groupfilter function='member' level='[none:Answer:nk]' member='&quot;with the kids&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
              <bucket>&quot;Do not want to share the covers&quot;</bucket>
              <bucket>&quot;Not enough space&quot;</bucket>
              <bucket>&quot;We are no longer physically intimate&quot;</bucket>
              <bucket>&quot;We have different temperature preferences for the room&quot;</bucket>
              <bucket>&quot;One of us needs to sleep with a child&quot;</bucket>
              <bucket>&quot;One of us makes frequent bathroom trips in the night&quot;</bucket>
              <bucket>&quot;We&apos;ve had an argument or fight&quot;</bucket>
              <bucket>&quot;Night working/very different sleeping times&quot;</bucket>
              <bucket>&quot;One of us is sick&quot;</bucket>
              <bucket>&quot;One of us snores&quot;</bucket>
              <bucket>&quot;Never&quot;</bucket>
              <bucket>&quot;Once a year or less&quot;</bucket>
              <bucket>&quot;Once a month or less&quot;</bucket>
              <bucket>&quot;A few times per month&quot;</bucket>
              <bucket>&quot;A few times per week&quot;</bucket>
              <bucket>&quot;Every night&quot;</bucket>
              <bucket>&quot;Immediately/ We&apos;ve always slept in separate beds&quot;</bucket>
              <bucket>&quot;Within the first 1-5 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 6-10 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 11-15 years of our relationship&quot;</bucket>
              <bucket>&quot;Within 16-20 years of our relationship&quot;</bucket>
              <bucket>&quot;After 20 years of our relationship&quot;</bucket>
              <bucket>&quot;always sleep in same bed&quot;</bucket>
              <bucket>&quot;At my own home&quot;</bucket>
              <bucket>&quot;Back room used as an office&quot;</bucket>
              <bucket>&quot;Couch&quot;</bucket>
              <bucket>&quot;Floor&quot;</bucket>
              <bucket>&quot;Guest house&quot;</bucket>
              <bucket>&quot;guest room when visiting out of town&quot;</bucket>
              <bucket>&quot;I live at home&quot;</bucket>
              <bucket>&quot;I sleep on the floor in a different room&quot;</bucket>
              <bucket>&quot;I sleep on the living room floor&quot;</bucket>
              <bucket>&quot;In the bed in our child&apos;s room to assist when child is fussy.&quot;</bucket>
              <bucket>&quot;kids bed&quot;</bucket>
              <bucket>&quot;Livingroom floor or couch&quot;</bucket>
              <bucket>&quot;Out of town&quot;</bucket>
              <bucket>&quot;Out of town location&quot;</bucket>
              <bucket>&quot;partner is out of town, hospital etc&quot;</bucket>
              <bucket>&quot;porch in the wind&quot;</bucket>
              <bucket>&quot;same bed&quot;</bucket>
              <bucket>&quot;spare room in the basement&quot;</bucket>
              <bucket>&quot;This does not occur&quot;</bucket>
              <bucket>&quot;We alternate, one in main bed, one on couch&quot;</bucket>
              <bucket>&quot;we don&apos;t  have  differnt&quot;</bucket>
              <bucket>&quot;With the baby in her room&quot;</bucket>
              <bucket>&quot;with the kids&quot;</bucket>
              <bucket>&quot;kids room&quot;</bucket>
              <bucket>&quot;Shared bedroom, but one of us sleeps on the floor&quot;</bucket>
              <bucket>&quot;Shared bedroom, different bed&quot;</bucket>
              <bucket>&quot;Other (please specify)&quot;</bucket>
              <bucket>&quot;I sleep in our shared bed, my partner is the one who sleeps somewhere else&quot;</bucket>
              <bucket>&quot;On the couch/chair&quot;</bucket>
              <bucket>&quot;Separate bedroom&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;When you&apos;re not sleeping in the same bed as your partner, where do you typically sleep?&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[Exclusions (Answer,Question)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='154' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{AAA22A5D-9CB9-4F27-A39A-20BD8FDC37C4}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column caption='Gender' datatype='string' name='[Gender - Response]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Gender - Response]' derivation='None' name='[none:Gender - Response:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Gender - Response:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Gender - Response:nk]' />
              <groupfilter function='member' level='[none:Gender - Response:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;To what extent do you agree with the following statement:ë_\&quot;our sex life has improved as a result of sleeping in separate beds.\&quot;ë_&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Gender - Response:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Gender - Response:nk]' value='97' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / ([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Gender - Response:nk]))</cols>
      </table>
      <simple-id uuid='{EFFBA0E8-F038-4ED4-8D5D-0E65C481438B}' />
    </worksheet>
    <worksheet name='Sleep Better Separately'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Do Couples Sleep Better Separately?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Data - Final Output)' name='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg' />
          </datasources>
          <datasource-dependencies datasource='federated.0e2htfe0hitmwr1d7bwdu0h9fjtg'>
            <column datatype='string' name='[Answer]' role='dimension' type='nominal' />
            <column datatype='string' name='[Question]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Same Answer]' role='measure' type='quantitative' />
            <column-instance column='[Same Answer]' derivation='Avg' name='[avg:Same Answer:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Answer]' derivation='None' name='[none:Answer:nk]' pivot='key' type='nominal' />
            <column-instance column='[Question]' derivation='None' name='[none:Question:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Answer:nk]' />
              <groupfilter function='member' level='[none:Answer:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Strongly disagree&quot;</bucket>
              <bucket>&quot;Somewhat disagree&quot;</bucket>
              <bucket>&quot;Neither agree nor disagree&quot;</bucket>
              <bucket>&quot;Somewhat agree&quot;</bucket>
              <bucket>&quot;Strongly agree&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]'>
            <groupfilter function='member' level='[none:Question:nk]' member='&quot;To what extent do you agree with the following statement: \&quot;we sleep better when we sleep in separate beds.\&quot;&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</column>
            <column>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' value='143' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' />
            </encodings>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</rows>
        <cols>([federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk] / [federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk])</cols>
      </table>
      <simple-id uuid='{90664BF9-AE7C-4EE6-8035-8183A550DFA0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Length of Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:ID:ok]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Same Answer (bin):qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC6A824D-684C-4058-A749-DF91A128143A}' />
    </window>
    <window class='worksheet' name='Help Stay Together'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{222C937D-ABE8-47B2-B28C-2049B8DF2346}' />
    </window>
    <window class='worksheet' name='Sleep Better Separately'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A31A4902-2958-4B6F-B598-71B5C4332763}' />
    </window>
    <window class='worksheet' name='Improve Sex Lives'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7662E8E7-5D0E-48DD-8341-37258DFAF2D8}' />
    </window>
    <window class='worksheet' name='Reasons'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C66C3BB7-857E-498B-B054-D2A98E2AE670}' />
    </window>
    <window class='worksheet' name='Frequency'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DC79E0F2-C3D9-4970-9E69-504D3F500ABD}' />
    </window>
    <window class='worksheet' name='How Long'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5842A0BB-3265-490A-97C5-050291A47AD4}' />
    </window>
    <window class='worksheet' name='Respondent Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0FC1CAEE-C476-4921-B134-93331BB5BDC2}' />
    </window>
    <window class='worksheet' name='Partner Location'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70E56273-C690-42F1-B8E6-FC6BF0062274}' />
    </window>
    <window class='worksheet' name='Occupations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E2D821B6-FA06-482C-9D3A-BAEEF15045FA}' />
    </window>
    <window class='worksheet' name='Relationship'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[avg:Same Answer:qk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{1FD954E4-1B1D-4FCD-9B32-2571EB96B909}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Answer:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Gender - Response:nk]</field>
            <field>[federated.0e2htfe0hitmwr1d7bwdu0h9fjtg].[none:Question:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F361E286-E357-4DA1-B98E-2A49219C94D8}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Frequency' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Help Stay Together' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='How Long' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Improve Sex Lives' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAXpklEQVR4nO3d6XMc+X3f8Xd3z33PAIOb4LnkcrmntFFKspzYkuKkXKmyH6WS/0Z/Rh7k
      aVx+4qqUK/bK2URaZVO6bGsvigRBgAAGx9yDue/uzgOu6AWXgAAsCEyDn9cTAs1B84tf8zP9
      6/n1fMdwXddFRDzJvOgCROT0zjzArusyHA7Perci8gIKsLyQrqy8QVPoS2Tcb/PbX/4/fvPP
      X3BY/oatCq1Oj/39/UP34zojPvns/tPHd+p8+NHHOMrzRPJddAFydjYf/45S9A6L3d/w8U/y
      LMym6WDwT5/c50f/4Ud8+Hc/IWHV2XGX+PffvUdz7xH/8Ks1lpcXyW3n+M6P/pJ3l5O0imsk
      swsA7Gxt4DpdKpUSP/ng75i/coNheY3o1fdZmEmQ36uRTfio7q1TM+YYdovce/PbvHFr+YJH
      49WgM/AlEouGaW4+JLdVYFDbZXtrh08/vU9o9hq9ocPNa/PMz0zxR9/5Fs1Wk821h/zJ2yke
      rFW4d/c261sVAH79y0cszGbAddne3SMwHrK2mePOt/8tfndANrtAqdDmo//7EYVmge3tHZ48
      ecJCNsL+KMJdhffcGGe9jOQ4Dt1ul1gsdpa7lWNwXYd87gm5vSr3bi9TqLSZmZ1mZ3uHxWtX
      2Xqyye3bNykUq0xlkgRMl/XdfWamUgQCFiPXTybi8NFnOX7w/l1wHZrNJvF4lGqjTSAQwh50
      qJUKxOZv0t/PEw+HMSNJBs0SzVGAeCzM3HT6oofilaEAywHOeEhv5BINBy+6FDkGXQPLAaYv
      QFT/KzxD18AiHnYuAXZdF8dxcA5Zi3Bd98zXHc97HfP5f++w3+mr23//9aStuX7TulzXxeVf
      jvvz+30ZzmTfRxwzx3GfLc1N0jGzfvzjH//4LHfoui6j0YhAIPBs27Bd5Vf/+AlWJMqgXmLk
      ixC0xgx7A3r9Ae54wCeP1rD8QQbNGrVWj2LuEa2BRTIRYSe3hWFZDGyDRq3Ayuo60UiYUrlG
      MGCS29pi2OnweDtPJpOh36zx6YPPmU3H2S3WicUiDPtdDNeh32uTL9fx+Sx8JgxGLsNeg+18
      mUQiyubaGr5QlGatzGA4JF+skoiF2NjYIZFKMhwMGPZ7uKZFv1lke+0JuXKDUadOZb9FKp3g
      /mef0h3YbP/uM+xwinGnRmvgELQcPv7p/4H4NNVCAae2Q75RZ3ejw3hUxfCHcV3o9bq4uFT2
      NhnbLoVKg6DfYHNzm0Qyhd1vsFusUtzZoD2AZqWA67qsrKxgBcKU8zuEolF2trdottr0Ry5O
      b5/GwGDU2adca1DZ26LRc8A0qRZ3qbYGpBNPX7foN/f4/H6OUCxKpbBDMBJhbMNoNKDXatDu
      j/AxZmO7QMjnUKg0CPh9uM4ITB9ruRy2Y1PceMjnT4r47C5WMEavXSOf2yMQi5HPbYIvSKNa
      oO8GiZgjat0ulXyBRrNFZ+DSa5ZpDRwsbFrNJu39EkMzBPYY2x7TadSotUcE3B6/+PgTppbm
      6TeqFGpNQsaQ3WqHRCxCtbhHvWsTj4Zp75do9waUSyUi0TBP1jfwGz4wYVTP89Fai+L2Kpnp
      Wca9JjvFGt3CBr9+UuHqTIKdrRyMurTNMOXtDQLhKJXCHkYoTCm3iW2F6HVajAZddgtVEtEg
      6xsbRGMpWs06hgHbmxuEYinGvRbbe2Xi4QDrW7tE/ZDLFwkGg2xtbBBJJGmW87Q6PQqVGnQq
      PNytkwzYlOod4rHo+VwDB+PTXLlyhUzY4Z+3uoS2v+D9f3WP9dXHDDCJWTDoj3i8UyU9LpKr
      DbmWjRKyTOzmJp9+9jtuvX6XXqPK7NIijuuwsfaIfKVN9/ZNjPGAet/GcWxwxuRzaxjA/Uc5
      jGGfQCiI06tjD3rsNccExgPyxRLv3l2i2PBhdYvcv79K2/ZjjYYUS0VajTqG3SdfbuAOqjxa
      z5OYnmHYqtLvN3CtKBGrTa/Tw44Escdjeu0mPXuZsW2DaTC2R+TXH9BuN7BSi7z/9k2iiRTD
      /Rw4FsVmg9BMln6nTtnnY6u5w2JoQK0zJjuVpLG3S4sWIwy6rSbDYZtWd8SosMFG1SYbNQlj
      s76+RnRqFtOx6ewXuL+yjm0GaLba2MMB0WiDjbUc/sQ8i9N+BmOIWjY+y8Q0YHNtFWKzXF+a
      AyAQyXD3rRnalT3K3R57v11h8dZ1xp19Os0ac1du0dovsfZki3o5QLVjc+f2LSqVGu+9fQ+A
      ZquFzxdgLu3niwcPueEEmUv5GIxHFMoVttbWiNVbmN0Kgbkg04sBmt0a+4UytglBn0kbP6NR
      nWzcJBzws9scYm6ukF2aIuD2yOc26JppktEQGAYApcIuK7ky7lKS9U6YxZkke9sb5Ftj5n/w
      JzzZzGGZJus7BTqOj421Ndo7NWbvzDGo7mJwlaFtYwD5fJ5Oe0DYZ7C0kKXfqvPowSNef/dN
      jP0C91ceMVurU9rZY+G1W9C1KQ0KZEIm42GPZneI2SrhDqoUUktY3Sb9boexPaJSbWINyqxu
      lLFGdVZXczilDL14gFGnydrWNi1fEKdSIRYL8ODhJu+8/xquGeb+/S9oORFSU9nzOQMD9PsD
      YokYld08/tg0C3NT1JptYrEgZuYGqVSccDBAyHTwBULMz0wzcCySqQi9vksmnSDoC2BGUtjd
      JqFIjEgsQSyZ4drSLL5AiF6vR2YqQ7tRYeRaxAN+OrbFzOwciZDNgzzMhMZ0bR/pRJR8oUgs
      M4NpDzF9Jr5wgkG7QTAcY2FxHr/pEo4nScUi+MJxpjJpIsaAUhea+3WuL2YIhGIMbZiemiI7
      lcIMRHCGPVwjQCaVIhkNMCDAVDZLOpUiGgkTD/upNTokYlFCsRgmAfrjLsn0FMNun1QsSs8I
      ErYcgul5ZtIJ7EGPVq9DJruAz3SxTT8z6QT9sUsgGCQUTRAP+fEHQhAIk82kmJ6ZIxWPEouG
      sbt9sjMzTM1mSSUSRIJ++o5JKBjCtockEkm69RKFUo1YappI0I8z7lMq1UnOztOu7uEYPmZn
      Z5lKp7DtEa5jY/nDJFMpwuEYqShEYikGgwEBv590IslUNkNv4JCdniIUCjCdncEZ9cEXIBwM
      kk4mcG2T6UyUvuOQSU6TzqSIh0xKjS6xRILZmWkWZqfJ75XwJ1LErRH+cAKfaZBMT+EOOoxd
      P/OLs4z6PSyfj3R6mqFtMjcVp9fv4/P7mZ2bJxAMEg0HGBtBMskUsZBJNBKgWK0RiCQIJGfw
      D5tks7MMe226Q5urV66Qmk5h4eK6NkYwSSIewnYsZlIx/H4/2WyCZr1HMp0gFg4QjSfIpJI4
      gyaNWpXQzE0ilo0vGGFhcR5nZBMIWtgOJONRwrE4/kGPFgGioSjhVAJfIMTy3AI+y8UyLKav
      LdLa7xHw+8hMTZFKpl6dZaRWo044nsRnGoc+ZjzosrVb5MryVQK+yXp9r9Pcp1zvsnxlkSN+
      hUul2x8SCQX+8AMngs1w6BIIHJzU9lpVCvtDrl6ZwzSOPnDDdhsrGsX6A4/7qlcmwCKX0WSd
      ZuSl294r0x3YX9terVYPfL9XLLGbLzDs9+m2m+dVnpyQluxfMZ3mPpViiVjEz+PHq9x5+12G
      nSbgsvnoM+bvfpeFdJhkLIrrOmxvrPBou8YPf/CnBH2vyNzdQ3QGfsWYhoHjjOm2Oyxcu0Us
      ZDK2wfIFiccirKzt0Or2iUajxGJRsPy8dvM6hmszHo8PXcuXi6FrYDkGl93cFr3hmOnZBVLx
      yEUXJF96FuDBYHAmnTRc16Xf7xMOh7/xvkTkaDoDi3iYroFFPEwBFvEwBVjEwxRgEQ9TgEU8
      TAEW8TAFWMTDFGARD9ObGS6TThf2GxddBczPgGVddBWvBAX4Mtkrwse/vugq4D//BUR0K+15
      0BRaxMMUYBEPU4BFPEwBFvGwEwe4uJfj4eoTeq19Hj54QKffZ/XBfYqV+suoT0SOcOJXobOz
      8/RGe1Tqbe7cuUnu058TvfFvGLRKOE4Cx3Gw7aftV+R8GY7DJCze2LaNq+N/Lk4YYJfc1jbp
      mXma1SKddgMzmqHXqGC5Dqb59IRuWRY+n1aozp05GVdElmWBjv+5OPERj0ZD7FerzC8tUm+O
      uXLn2yTCfuYWll5GfSJyhBM+TRpkZxfIfvndlSsLAMzMzp5tVSJyLJMx5xKRU1GARTxMARbx
      MAVYxMMUYBEPO7fFupE9wnYuenHfIOQPXXANImfn3AL8N5/9NX97/2/O6597oYg/wn/7L391
      oTWInCVNoUU8TAEW8TAFWMTDFGARD1OARTxMARbxMAVYxMMUYBEPO3GAO6199hstRoMujx+v
      MxzbbG9t0uz0X0Z9InKEE9+J1R826Q2CtGodpjJh9tY/x/anKRf3iF+/DoDruriu+9xPPv/9
      xfh6XZeLcdEF8OUYX/JxnhQnDvDUVIZ8voPl91Gvt/ENG/iyr+N2ysC/hNdxnAM/NynH8/m6
      LhPDdSYiwI7rwiUe50ly4gAX96rU9gcsLs/QypeZufmvKe3kSM4sYhgGhmFgmubTxmZfYRiT
      8F+Lr9V1qRiT8ZKGZZr6cLNzcuIAzy5cY/ZpKyxS8TQAsdt3zrQoETmeyXjKFpFTUYBFPEwB
      FvEwBVjEwxRgEQ9TgEU8TAEW8TAFWMTDFGARD1OARTxMARbxMAVYxMMUYBEPU4BFPEwBFvGw
      EwfYHo8Yjce4rkun08Z2XPq9HmNbHRhEztuJ39BfKKwxsOMkfCNqQ4ulqRYrj7aJpbPcvnX9
      ZdQoIoc4cYAXl5bI5zu0uh3c4ZjKkzzzd/4Uu5nHcRwcx8G2bcbjg58FPCm9qJ6v6zIxHIdJ
      aGRj2zbuJR7nSXKKnlglCsUu124sUiqUiVx5i1LuAcnsPKb5dEZuWRY+38Fd//7vLtrzdV0q
      EzLGlmXBZR7nCXKKnlg3n/XESiczAExPzZ5pUSJyPJPxlC0ip6IAi3iYAiziYQqwiIcpwCIe
      pgCLeJgCLOJhCrCIhynAIh6mAIt4mAIs4mEKsIiHKcAiHqYAi3iYAiziYQqwiIedOMB7m79j
      ZT2H67r89qcf0Oj3+Ok/fMDadvFl1CciRzhxR46Fa8sY+Q7NSpHM8k2GhQfc/e6fMW7sPuuF
      NRqNGAwGB37Otu0zK/q0XPhaXZeJOR7jv+gigOFwiGtpcnceThzgzcdrrG42uPvWDfZLBYyr
      V9j54tfMLCxjWRaGYeD3+wkGgwd+zrIuvt2aAV+r61KZkD5UgUAALvM4T5ATH/FM9irvJGym
      ZrMsTs/jWj6SkRThWOJl1CciRzhxgBOpDM+i6ns6YUul02dYkogcly5URDxMARbxMAVYxMMU
      YBEPU4BFPEwBFvEwBVjEwxRgEQ9TgEU8TAEW8TAFWMTDDg2w63Zo1LvnWYuInNARZ+AxP/vw
      J3z+4PH5VSMiJ3LEu5HivPH2WySyU+dXjYicyOFnYLfMRx/+gk8erJ5jOSJyEocH2Ihw780b
      3Lt588Dm8t4TNrbz9Ns1Pvj7D2j2hvzy45+zW2687FpF5DlHTKFdquU8bcfH8nz22dbkdJJR
      dYQVjPH+O7fp7/yWpbvfYtyp4TjxA32xvspxJqMn1vN1XSaGbZ+8Q8NLMBqP4RKP8yQ54nib
      OI6N7YwPbB0NBjQbHQI+l0rH5Vp6iup+haDfxDAMTNPENM2v9cAyjItfsTKYjN5cL4158WMM
      YJkmXOZxniBHBNjBtIJcu3b1wNbCbpVarU88HaFWLjE98zbmOEd6/iaGYRwI8VcZhvEy6j+x
      5+u6VCZpjC/zOE+QwwPsttnea7BvrvPGreVnm2++/ha/vypenF0EIJt642XWKCKHODzAxhzf
      //5b+GJqWCcyqY5YRmpRrbZJxuPnWI6InMQRy0gBLLfPg5W1cyxHRE7ihVNo1x3wv//+ZxRy
      Oazp1867JhE5pkPOwD5mkkEqjTbJtD5xQWRSvfAMbBgW73z/h7zz/R9ij8cveoiITIAj3k5Y
      56//+//gH1d0L7TIpDpitT1AJDCm1728H8cp4nVH3gudTKWIhULnV42InMgRZ2CD/nBALBo5
      v2pE5ESOuJFjCIafgH8SPvNdRF7kiFspfextrdPzh7i+vHCOJYnIcR15Bg5HUrgT8DZAEXmx
      Q+7EcihXHN577yb7Y10Di0yqF0+h3S4PPl/BCFrEwsNzLklEjuvFATaivPn2LSLJDM7oYIBH
      wz62axL0m9T2m2QyaZqNBqFonKBfXRhEztMht1IaTM/MAdB+LsC9boV6y8RnjLB8Fntrm7RI
      E6w3uX5t+UW7E5GX5NBXoV3XZmdri2q9zetvvkXI97RdSyKVpNPrYI8NspkMe8VVoguv4XRr
      OI6D4zjPGtt9leM4L/c3Oabn67pMDMdhEuZAtm3jXuJxniRHtNTZ52cf/px2v8ZOOch//Hd3
      ACjulSmVeyxfneXR6jpX73yP7UcPSM1ffdZvyrIsfL6Du56UXlTP13WpTMgYW5YFl3mcJ8gR
      68AxcDosXrtNJht9tnl24QazXy4Lp1PTALzxzrdeapEi8mJHPGX7+Na332Nk+/jeu0vnV5GI
      HNsR85wBIyK89+7Vwx8iIhfq0JY6/+t//oxWrU547jVuXtMZWGQSHTKFNoiEIwSCAXzWZLww
      IiJfd8g6cIA//tEPgKdLAiIymf7g6fVSf5aQiMdpfiziYQqwiIcpwCIepgCLeJgCLOJhCrCI
      hynAIh6mAIt4mAIs4mEKsIiHnbptQnF3i2qjSSYRIV9uk5ya5sby4lnWJiJ/wDfqe+K6DnZ9
      l9kb38Np5dUT64KpJ9ar59QBdlwX0zAhc5P8w1+Rmr+unlgXbULGWD2xzs+pR3l+6RrzX369
      OK+ps8hFmIynbBE5FQVYxMMUYBEPU4BFPEwBFvEwBVjEwxRgEQ9TgEU8TAEW8TAFWMTDFGAR
      D1OARTxMARbxMAVYxMMUYBEPU4BFPOzUAe40qjxcWaXbbfLgi8/ZLZTPsi4ROYZTd+QoVSpY
      psGo+JDklfdwWgX1xLpg6on16jl1gKORKP2RzX7forH9mGg0pp5YF21Cxlg9sc7PqUc5O7dA
      r9cnFF5mOBjg9wfOsq6J0Gm3cOyLnTmEwmH8gcs3tnI2Th1gwzCJRCIAhEKhMytoknz+m1/R
      bjUvtIa773yLpWvXL7QGmVyTMecSkVNRgEU8TAEW8TAFWMTDFGARD1OARTxMARbxMAVYxMMU
      YBEPU4BFPEwBFvEwBVjEwxRgEQ9TgEU8TAEW8bDTB9h12Xm8Qn88Zn11hUq9dYZlichxnPoN
      /cNei2KjQ6j4kEDmBp1GhUwieqAv1le57mT0xHq+rqO4L7GO43Ldr4/lYQzXmYgple04cIJx
      ltM7ZYBd1le/YGP1CQH/deLZLrguhmFgmuazP7/KMIwzKPebO0lvrkmo+EVjefiDJyG+YBrG
      xPTnuuxOGWCDu+/+Ea+9/h5OIExpJ0dyZh7DMHC/DPLXAzsJcZicJ5Lje9FYTjbDMMBjNXvV
      N2od6As97Ym1tHz1TIoRkZPRPEfEwxRgEQ9TgEU8TAEW8TAFWMTDFGARD1OARTxMARbxMAVY
      xMMUYBEPU4BFPEwBFvEwBVjEwxRgEQ9TgEU87NQBdsZDNje3GDkuxUKe7mB0lnWJyDGcOsCN
      RoPpTJTdtc+pN5rs7WyfZV0icgyn7sgRi0Z4nCvyWtymHLmB0ywcaGg3Ho8PPN5xJqOp3fN1
      HWUSmto5jnPsmg3HwXrJ9RyHbdu4JxhnOb1TB7jZbGC5I3rx12hvr5KaWXzWfM2yLHy+g7s+
      STO5l+n5uo4yCV2dTNM8fs0TMsaWZcEJxllO79SjPDWzwNTM068Td++dVT0icgKT8ZQtIqei
      eY5cqI/+6r+y8cU/XWgN9/74z/jOn/+nC63htBRguVCOY+PYF/uCl+vhT5HQFFrEwxRgEQ9T
      gEU8TAEW8TAFWMTD9Cq0yAmU2m3+9uEXF10Gf37nDRYSSQVY5CQG4xGPq5WLLoPu6Om7/zSF
      FvEwBVjEwxRgEQ/7xgF2nT6f/eYXbO0UzqIeETmBbxxgp7TC9O33MV211BE5b984wEZsmuLm
      CkPv3g8u4ln/HxB2q/bVvFh6AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Length of Relationship' width='240'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Occupations' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Partner Location' width='240'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Reasons' width='240'>
      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
      9LwZfuuLp5GkHqtbPdxmkdt3HnDmS98mG/M9730SPqFiuQiu4ZVNMgwTdYi3qBlmPF3XkRUF
      ZUglcHTdQJZlFGU48Z60rwee+TbbXaIRP6YFYHLp9gqKonJ7u8LuZgVJadI0oviiEySpUtFs
      4i6dZmvAwBpw/gtfoFEtgUjgY0eVVaIBUZHjWeMdiYoc8dQIUWePavfRywzZy/yp08ScMuFo
      nNOn51CQ0LUBpWoNz2/sv8cXIpVM41RE8TtB+DQdeArdbTXoaBaRoO/R/GRjQKOrEwxH0Tt1
      +gZEoz2WFzXSYylCfjeSZDHQHk2YUB0OjCF/8wrPh6iJ9cniiaJ2wqHKl/L0leHdzN00TJQh
      XgMPM56u6yiygjysa9b3roGHFe9J+ypGf4TH5Jt7Yhz4mPjUpkjpWv+plwYuP3hA17C5v7LN
      oNel+w/uy1t9f0mgyWAw+FjtaDaqGO9divd7XT5q9WGjsE77GdYTtpp1dF2n29Po1EtcW9yg
      Utzl1t2l97f9JLapM+j3Hntc6zSpd/pPfL9laPQ1sRby80b57ne/+90Pe2Lj/g3euPKA8bEY
      i9fepmgGUAcVrrz5Oro7jkuv8ePXfoEjmETql1lZ26LT6/Pm66/j8Hq59IPvs1obEA75eeNn
      r6EEk0T87g9txNqdKzT7EqubRVI+Bx2fn+rD21x69zqxzBSbi+9w9dYSst3hhz96Dc2bJBNx
      srZSwuxV2a3pNGpNZLPJz372Ov7EKNagxa13rtGTZCJBP+Vyg167gdeq886Nuyxv1RmJObl1
      +U1WqpBN+Fi6u43L58Dvc1Eot6jtrXDp+grpSIjy7irbtSq27cIjDWhoEh6nxO23f8E791aZ
      Gh9lf2ePO++8xr7hYevWu7Rx4bFavH39PrmxMUo7K9y6V8Ds7fHurYfkxhKs3LzOO7dWMBq7
      /Pi1n+NPTxINuNi89Sa31mtE/ApNU6ZXWOP1q/fJjqbYeXCdpaJGwGVy69IvKfYdxDwSTc2m
      srPMW29dIZjK0i9v8PO3r+INpQj6XE/9ocjX9rm0/ctn+kAJz9fBCby2AqoLvdtgabVAYaeO
      L+JidGyKeqWE5JIoFSq0BxauwTbO8CQeeUChVKWtweRIjOzMHM3dh5QbXQaGxNho6kNX+AwM
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Relationship' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Respondent Location' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAT2ElEQVR4nO3dSXMc6X3n8W9m7QtQKFRhX0k2mmxSHPZi2dKENA5Z0oQdMRf77Hfh09x0
      mXcwMYeZcPhmzfgqj/buFntfQbK7uYEESaxVQKFQ+56LD1TQpkRQKDS2p/n7nBCF6sSfiPx2
      ZWVmPbB83/cRESPZJz2AiBzcoQfsui6O4xz2ZkXkGRSwHIjeeZ0OOoR+gfhuj08/eI/3P76O
      4z07wG6zQbFYp1Yu4Hh7bcjn+rXrj7/sNfjVL9/E3WN7crSCJz2AHJ/K1iOqQ+d4qfQe//e3
      Hf7szDAbVZ+1a1f5zz/8K95/821SyRiLSxX+/u/egPZN3vmqwGuvTLJ4a4W//G9/y4WRGO31
      jwgMzAOQf3Af2psUGhu8+dOfk33pApUHNzn7ne8Tj8fZWc8xOpIid+cG1dRFEv46Y9OXuXx+
      /kR/F98UegV+gUTiCR7dXuKr5SJOq8HGZo47d27jZ+bw/B5nx5IkBjP8+ZU36NRLfPjJIy5n
      Oiyv73Dp1Ss82moDcPWOx/zMCAAPV++RSGe5d/ce5y5dJmW3GTl7gbWiw63//1OKuxuUyhu8
      9/EKY0loBYcV7yGyDvsyUrfbxfM8otHoYW5WDoXP9toD7jza5tKFMxTLddKjE+ysLjM6M0Nu
      dYPZM/PsbucZzg4TCsDKVoPJkUF8O4hrRRiOw2fXbvP6a5exLSjv5EllR6lWilhEwO+R29gg
      M7tAvVhkIBHBjibpljeoekkyQ3GGU4Mn/Yv4xlDA0h/fod7okUzGTnoSQe+BpV9WkGRSu81p
      8UK/B+51WrQcj52tbTy3Q7XWpOf2v516s8l+TsL+4cFOp1HB2+sAyPeffanmGY/7vo/nuXS6
      B71859PudP/o0V6vhevudSr6oD9qj3/Xc3Ta9X09r9tps98t+3vM8azHa+UazVaL7jN+Fe1W
      e8+f4XbqrG9u4R7hJbfAT37yk58c5gZd18X3fYLB0/9/aadT5eadAvniJqFGgbVah69uLpEd
      zfLBu+8yEI9z48YiTniIqN/GD4aoV0p8cf06dnSAlge7lRq9VoNuo8z6ep7lmzeIZ6cINHf5
      6LNF/PAAq19+hBNO8quf/yvxoXH85g4fXb9L1NkhFAry2Rf3SA9Eufr+p0xmh/jdu1cZTiUp
      VXe5e+M2W50gvcIyt9eKTIxn2VpfZjeX4/O7OeZnh3j7Fz+n2Oiweu8mXiTF9qM7FNs2mcEo
      7739W8KxGDcWFwkls9z+4n12tguUmx7tco6l9SKTY0N88v7vaHgROuUcd1d3GAz3+OXbv2N2
      doHC+j1u3F0jFXb58PoyczMTVKsVep0u5Z1VvnxYwg5YeL0O25UW22tLpLPjfPreb2kSo7R5
      n+Vcjajb4MHSl7z1zueEomFuXl9kbGaWj66+RTw+wObqQ+zUKLGAT7VSZbdUIuj75DZu8/m1
      e2TTCRZv3CQ9NMDDpdt067s82Koxlhlia/U+Vz++wWQmwmc3V5gYy1KvVvDdHrXdPNfubhCP
      hvA9lyYWt97/NV9uNEgPxHC6XTbuXePWZpNquUbIb/HptZuE/BqLd7do5ndpWV3qjs1Q1Kfa
      9GltP+DG/Rx4PUJ0eOeTW8xkwnx8fYlwCD778FNGJiYplisQTpKIBI5kH36hAw4EguyuLjL7
      0gW+XOswlo4zNjbMnVtrDKQT9HZLjExPQmOX1HCa5aVblPK7ZMbH2F27RyOaJr9d4lsvzZLf
      KjA4GCPf8LHDERKtbaKZUTrbj2iPvULuYY5vXb7A3NQYjXodz7aI0OHmcpFQNEpuM08mHcdz
      bOYvvczuyn38INQbacLdMn5ykIFIiIH0EOXCOpWSw2TAIzw1SzKe5KX5SbxoFsdrsru9SyQS
      ZDg1QLPTxWl28D2HwnqezPnzBANxBqIBtvJ5IpEoI6PDdANJ2p0224UiiWiEVjnPy+dnCUfS
      NBs1arUS8WQSy+uQGRmjmF+j0ulSWt1gONlltWJhO002d+vMzJ0jEQ3iB8J4vQa2FaC0W8Sr
      lFh443tksynCQYuFc1Pk17eoW2GCrRJ2IsVkNg1Y5LfW2d0tk2v4DIUdXnp5nMXFFaxomGa9
      w+D0GW7fvU84Gic9EKNUKjA7McLN5SKzSY92cACvXSWf2+LhZpWZeJe1UpdI0KcRjDKTTTE1
      M0u1sE6z50C7STxQZ7sexMLl5YsXae1uUthaI2IPEklFCAVt7t7fZHp6jMJOiUAwhGfblHc2
      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
      /imaReSg/g0t039YrLB/7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 12' width='240'>
      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
      fjtC8gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sleep Better Separately' width='240'>
      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
      RlMAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
